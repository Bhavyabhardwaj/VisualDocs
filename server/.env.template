# ================================================
# VISUALDOCS BACKEND - ENVIRONMENT CONFIGURATION
# ================================================
# Copy this file to .env and fill in your actual values
# NEVER commit your .env file to version control!

# ================================================
# üö® REQUIRED VARIABLES (Application won't start without these)
# ================================================

# Database Connection (CRITICAL - Must be set)
DATABASE_URL="postgresql://username:password@localhost:5432/visualdocs_db"

# JWT Security (CRITICAL - Change these for production!)
JWT_SECRET=your-super-secure-jwt-secret-key-minimum-32-characters-long-change-this-in-production
REFRESH_TOKEN_SECRET=your-super-secure-refresh-token-secret-minimum-32-characters-long-change-this-in-production

# ================================================
# üåê SERVER CONFIGURATION  
# ================================================

# Server Settings
NODE_ENV=development
PORT=3004
HOST=localhost

# Base URL for OAuth callbacks
BASE_URL=http://localhost:3004

# Frontend URL for CORS and redirects  
CLIENT_URL=http://localhost:3005
ALLOWED_ORIGINS=http://localhost:3005,http://localhost:3000

# ================================================
# üîê OAUTH AUTHENTICATION (Optional but recommended)
# ================================================

# Google OAuth (Get from https://console.cloud.google.com/)
# 1. Create a project ‚Üí APIs & Services ‚Üí Credentials
# 2. Create OAuth 2.0 Client ID
# 3. Add authorized redirect URIs: http://localhost:3004/api/oauth/google/callback
GOOGLE_CLIENT_ID=your-google-client-id-here
GOOGLE_CLIENT_SECRET=your-google-client-secret-here

# GitHub OAuth (Get from https://github.com/settings/developers)  
# 1. OAuth Apps ‚Üí New OAuth App
# 2. Authorization callback URL: http://localhost:3004/api/oauth/github/callback
GITHUB_CLIENT_ID=your-github-client-id-here
GITHUB_CLIENT_SECRET=your-github-client-secret-here

# ================================================
# ü§ñ AI INTEGRATION (Required for diagram generation)
# ================================================

# Google Gemini API Key (Get from https://aistudio.google.com/app/apikey)
# Used for AI-powered diagram generation (Nano Banana model)
GEMINI_API_KEY=your-gemini-api-key-here

# ================================================
# üêô GITHUB INTEGRATION (Optional - for repository import)  
# ================================================

# GitHub Personal Access Token (Get from https://github.com/settings/tokens)
# Increases API rate limit from 60/hour to 5000/hour
# Allows access to private repositories if token has permissions
# Generate with 'repo' or 'public_repo' scope
GITHUB_TOKEN=ghp_your-github-personal-access-token-here

# Alternative name for GitHub token (some prefer this naming)
# GITHUB_ACCESS_TOKEN=ghp_your-github-personal-access-token-here

# ================================================
# üìÅ FILE UPLOAD CONFIGURATION
# ================================================

# Maximum file size (in bytes) - Default: 10MB
MAX_FILE_SIZE=10485760

# Upload directory path (relative to server root)
UPLOAD_PATH=./uploads

# Maximum number of files per project
MAX_FILES_PER_PROJECT=100

# ================================================
# üìä JWT TOKEN CONFIGURATION
# ================================================

# JWT token expiration times
JWT_EXPIRES_IN=7d
REFRESH_TOKEN_EXPIRES_IN=30d

# ================================================
# üêõ LOGGING & DEBUGGING
# ================================================

# Log level: error, warn, info, debug
LOG_LEVEL=info

# ================================================
# üöÄ PRODUCTION ADDITIONAL VARIABLES (Optional)
# ================================================

# For production deployments, you might also need:

# SSL Configuration (for HTTPS)
# SSL_CERT_PATH=/path/to/certificate.crt
# SSL_KEY_PATH=/path/to/private.key

# Redis for session storage (if using Redis)
# REDIS_URL=redis://localhost:6379

# Email service (for notifications)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password

# Monitoring & Analytics
# SENTRY_DSN=https://your-sentry-dsn-here
# ANALYTICS_ID=your-google-analytics-id

# ================================================
# üîß ADVANCED GITHUB IMPORT SETTINGS (Optional)
# ================================================

# GitHub API rate limiting
DEFAULT_MAX_FILE_SIZE_MB=5
DEFAULT_MAX_REPO_SIZE_KB=500000
GITHUB_IMPORT_BATCH_SIZE=10
GITHUB_IMPORT_TIMEOUT_MINUTES=10
GITHUB_RATE_LIMIT_BUFFER=10
GITHUB_BATCH_DELAY_MS=100

# ================================================
# üìù SETUP INSTRUCTIONS
# ================================================

# 1. DATABASE SETUP:
#    - Install PostgreSQL
#    - Create database: CREATE DATABASE visualdocs_db;
#    - Update DATABASE_URL with your credentials
#    - Run: npx prisma migrate dev
#    - Run: npx prisma generate

# 2. JWT SECRETS:
#    - Generate secure random strings (minimum 32 characters)
#    - Use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#    - NEVER use the example values in production!

# 3. OAUTH SETUP (Optional):
#    - Google: https://console.cloud.google.com/
#    - GitHub: https://github.com/settings/developers
#    - Follow OAuth setup guides in docs/oauth-setup.md

# 4. AI INTEGRATION:
#    - Get Gemini API key: https://aistudio.google.com/app/apikey
#    - Required for diagram generation features

# 5. GITHUB INTEGRATION (Optional):
#    - Generate personal access token: https://github.com/settings/tokens
#    - Select 'repo' scope for private repos, 'public_repo' for public only
#    - Increases rate limits and enables repository import

# ================================================
# üéØ QUICK START CHECKLIST
# ================================================

# ‚úÖ Set DATABASE_URL with your PostgreSQL connection
# ‚úÖ Generate and set JWT_SECRET and REFRESH_TOKEN_SECRET  
# ‚úÖ Set GEMINI_API_KEY for AI diagram generation
# ‚úÖ Update CLIENT_URL if your frontend runs on different port
# ‚úÖ Optional: Set OAuth credentials for social login
# ‚úÖ Optional: Set GITHUB_TOKEN for repository import
# ‚úÖ Run: npx prisma migrate dev
# ‚úÖ Run: npm run dev
# ‚úÖ Test: http://localhost:3004/health

# ================================================
# üö® SECURITY NOTES
# ================================================

# - NEVER commit this file to version control
# - Change all default secrets before production
# - Use strong, unique passwords for database
# - Keep API keys secure and rotate regularly
# - Use HTTPS in production (set NODE_ENV=production)
# - Regularly update dependencies for security patches